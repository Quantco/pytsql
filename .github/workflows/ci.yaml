name: CI
on: [push]

jobs:
 
  pre-commit-checks:
    name: "Linux - pre-commit checks - Python 3.8"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4
      - name: Set up pixi
        uses: prefix-dev/setup-pixi@v0.8.1
        with:
          environments: default lint
      - name: pre-commit
        run: pixi run pre-commit-run --color=always --show-diff-on-failure

  unit-tests:
    name: "Unit tests - ${{ matrix.OS }} - Python ${{ matrix.PYTHON_VERSION }}"
    runs-on: ubuntu-latest
    env:
      CI: True
    strategy:
      fail-fast: true
      matrix:
        # PYTHON_VERSION: ['3.9', '3.10', '3.11', '3.12', '3.13']
        env: ["py39", "py310", "py311", "py312", "py313"]
        os: ['ubuntu-latest', 'windows-latest']
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4
      - name: Set up pixi
        uses: prefix-dev/setup-pixi@v0.8.1
        with:
          environments: ${{ matrix.env }}
      - name: Install repository and generate code coverage report
        run: |
          pixi run -e ${{ matrix.env }} postinstall
          pixi run -e ${{ matrix.env }} pytest test/unit

  linux-integration_tests-sqlserver:
    name: "Linux - integration tests - Python ${{ matrix.PYTHON_VERSION }} - mssql"
    runs-on: ubuntu-latest
    env:
      CI: True
    strategy:
      fail-fast: false
      matrix:
        # PYTHON_VERSION: ['3.9', '3.10', '3.11', '3.12', '3.13']
        env: ["py39", "py310", "py311", "py312", "py313"]
    services:
      DB:
        image: mcr.microsoft.com/mssql/server:2019-latest
        env:
          ACCEPT_EULA: Y
          SA_PASSWORD: pytsql-Test-123
        ports:
          - 1433:1433
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4
        with:
      - name: Set up pixi
        uses: prefix-dev/setup-pixi@v0.8.1
        with:
          environments: ${{ matrix.env }}
      - name: Install msodbcsql17 driver
        shell: bash -l {0}
        run: |
          wget https://packages.microsoft.com/ubuntu/20.04/prod/pool/main/m/msodbcsql17/msodbcsql17_17.10.1.1-1_amd64.deb
          ACCEPT_EULA=Y sudo apt install ./msodbcsql17_17.10.1.1-1_amd64.deb --allow-downgrades
      - name: Wait for SQL Server
        timeout-minutes: 1
        run: until docker logs "${{ job.services.db.id }}" 2>&1 | grep -q "SQL Server is now ready"; do sleep 10; done
      - name: Run Integration Tests
        shell: bash -l {0}
        run: |
          pixi run -e ${{ matrix.env }} postinstall
          pixi run -e ${{ martix.env }} pytest --backend=mssql tests/integration
